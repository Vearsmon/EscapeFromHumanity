class AllEnemies
{
    field Array enemies;
    field Array enemyX;
    field int count;

    constructor AllEnemies new()
    {
        var int i;
        var int curX;
        let i = 0;
        let count = 9;
    
        let enemyX = Array.new(count);
        let enemyX[0] = 31;
        let enemyX[1] = 5;
        let enemyX[2] = 23;
        let enemyX[3] = 12;
        let enemyX[4] = 1;
        let enemyX[5] = 27;
        let enemyX[6] = 18;
        let enemyX[7] = 0;
        let enemyX[8] = 20;

        let enemies = Array.new(count);
        while (i < count)
        {
            let curX = enemyX[i];
            let enemies[i] = Enemy.new(curX, 39+(24 * i), true);
            let i = i + 1;
        }

        return this;
    }

    method void run()
    {
        var int i;
        var Enemy enemy;
        let i = 0;

        while (i < count)
        {
            let enemy = enemies[i];
            do enemy.moveEnemy();
            let i = i + 1;
        }

        return;
    }

    method boolean isEnemyThere(int x, int y) 
    {
        var int i;
        var Enemy enemy;

        let i = 0;
        while (i < count)
        {
            let enemy = enemies[i];
            if ((enemy.getXCoord() = x) & (enemy.getYCoord() = y)) 
            {
                return true;
            }
            let i = i + 1;
        }

        return false;
    }

    method void dispose()
    {
        var int i;
        var Enemy enemy;

        let i = 0;
        while(i < count)
        {
            let enemy = enemies[i];
            do enemy.dispose();
            let i = i + 1;
        }
        
        do enemies.dispose();
        do enemyX.dispose();
        do Memory.deAlloc(this);

        return;
    }
}